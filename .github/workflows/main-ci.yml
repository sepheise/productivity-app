name: main-ci
on: 
  push:
    branches:
      # Changed temporary for branch work. Restore to main when finish.
      - 'gather-and-show-coverage'
jobs:
  test:
    runs-on: macos-12
    outputs:
      output1: ${{ steps.build-status.outputs.status }}
      output2: ${{ steps.tests-status.outputs.status }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Build for testing
        run: |
          xcodebuild build-for-testing \
            -project ProductivityFW/ProductivityFW.xcodeproj \
            -scheme CI CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
      - name: Save build status
        id: build-status
        run: echo "::set-output name=status::${{ job.status }}"
      - name: Run CI scheme Tests
        run: |
          xcodebuild test \
            -project ProductivityFW/ProductivityFW.xcodeproj \
            -scheme CI CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO \
            -resultBundlePath results/ResultBundle.xcresult
      - name: Save tests status
        id: tests-status
        run: echo "::set-output name=status::${{ job.status }}"
      - name: Archive tests results
        uses: actions/upload-artifact@v3
        with:
          name: tests-results
          path: results
          retention-days: 1
  parse-coverage-results:
    runs-on: macos-12
    outputs:
      coverage: ${{ steps.save-coverage.outputs.coverage }}
    needs: test
    steps:
      - name: Download tests results
        uses: actions/download-artifact@v3
        with:
          name: tests-results
      - run: xcrun xccov view --report --json ResultBundle.xcresult > resultAsJson.json
      - run: cov=`cat resultAsJson.json | jq -r '.lineCoverage' | awk '{printf("%.1f",$1*100)}'`
      - run: echo ${cov}
      - id: save-coverage
        run: echo "::set-output name=coverage::$cov"
  update-badges:
    runs-on: ubuntu-latest
    needs: [test, parse-coverage-results]
    steps:
      - name: Creates build status badge
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: e6b6d639ed2a33d1d08b84237724ebe9
          filename: productivity-app-build-status.json
          label: Build
          message: ${{ needs.test.outputs.output1 == 'success' && 'passing' || 'failing' }}
          color: green
          isError: ${{ needs.test.outputs.output1 != 'success' }}
      - name: Creates test status badge
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: f766cc76b47b16757b8d724d198ddd52
          filename: productivity-app-test-status.json
          label: Tests
          message: ${{ needs.test.outputs.output2 == 'success' && 'passing' || 'failing' }}
          color: green
          isError: ${{ needs.test.outputs.output2 != 'success' }}
      - name: Creates coverage badge
        run: echo ${{ needs.parse-coverage-results.outputs.coverage }}
